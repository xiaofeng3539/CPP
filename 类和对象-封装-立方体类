#include<iostream>
using namespace std;

class Cube{
public:
	void setL(int l)
	{
		L = l;
	}
	
	int getL(){
		return L;
	}
	
	void setW(int w){
		W = w;
	}
	
	int getW(){
		return W;
	}
	
	void setH(int h){
		H = h;
	}
	
	int getH(){
		return H;
	}
	
	int calculateS(){
		return 2*L*W+2*W*H+2*L*H;
	}
	
	int calculateV(){
		return L*W*H;
	}
//	成员函数判断立方体是否相等
	bool isSameByClass(Cube &c){
		if(H == c.getH() && L == c.getL()&& W == c.getW()){
			return true;
		} 
		return false;
	}
		
private:
	int L;
	int W;
	int H;
};

//全局函数判断是否相等
bool isSame(Cube &c1,Cube &c2){
	if(c1.getH() == c2.getH() && c1.getL() == c2.getL()&& c1.getW() == c2.getW()){
		return true;
	} 
	return false;
}



int main(){
	Cube c1;
	c1.setL(10);
	c1.setW(2);
	c1.setH(3);
	cout << "c1的面积为" << c1.calculateS() << endl;
	cout << "c1的体积为" << c1.calculateV() << endl;
	
	Cube c2;
	c2.setL(10);
	c2.setW(2);
	c2.setH(3);
	
	bool ret = isSame(c1,c2);
	if(ret)
		cout << "相等" << endl;
	else
		cout << "不相等" << endl;
	
	bool a = c1.isSameByClass(c2);
	if(a)
		cout << "相等" << endl;
	else
		cout << "不相等" << endl;
	return 0;
}
