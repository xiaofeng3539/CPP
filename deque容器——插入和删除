#include<iostream>
using namespace std;
#include<deque>

//deque容器大小操作
void PrintDeque(const deque<int>&d){
	for(deque<int>::const_iterator it = d.begin();it != d.end();it++){
		cout << *it << " ";
	}
	cout << endl;
}

void test01(){
	deque<int>d1;
	
	//尾插
	d1.push_back(10);
	d1.push_back(20);
	
	//头插
	d1.push_front(100);
	d1.push_front(200);
	
	//200 100 10 20
	PrintDeque(d1);
	
	//尾删
	d1.pop_back();
	//200 100 10
	PrintDeque(d1);
	
	//头删
	d1.pop_front();
	//100 10
	PrintDeque(d1);	
	cout << endl;
}


void test02(){
	deque<int>d2;
	d2.push_back(10);
	d2.push_back(20);
	d2.push_front(100);
	d2.push_front(200);
	
	//200 100 10 20
	PrintDeque(d2);
	
	//insert插入
	d2.insert(d2.begin(),1000);
	PrintDeque(d2);
	
	d2.insert(d2.begin(),2,10000);
	PrintDeque(d2);
	
	//按区间进行插入
	deque<int>d3;
	d3.push_back(1);
	d3.push_back(2);
	d3.push_back(3);
	d3.insert(d3.begin(),d2.begin(),d2.end());
	PrintDeque(d3);
}

void test03(){
	deque<int>d1;
	d1.push_back(10);
	d1.push_back(20);
	d1.push_front(100);
	d1.push_front(200);
	
	//删除
	d1.erase(d1.begin());
	PrintDeque(d1);
	d1.erase(d1.begin()+1);
	PrintDeque(d1);
	
//	//按区间方式删除
//	d1.erase(d1.begin(),d1.end());
//	PrintDeque(d1);
	//清空
	d1.clear();
	PrintDeque(d1);
	
}

int main(){
	test01();
	test02();
	test03();
	return 0;
}
