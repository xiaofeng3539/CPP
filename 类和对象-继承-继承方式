#include<iostream>
using namespace std;

//继承方式：公有、保护、私有

class Base1{
public:
	int m_a;
protected:
	int m_b;
private:
	int m_c;
};


//公共继承
class Son1 : public Base1
{
public:
	void func(){
		m_a = 10;   //共有权限
		m_b = 10;   //变为保护权限
//	m_c = 20;     父类私有 无法访问
	}
};

void test01(){
	Son1 s1;
	s1.func();
//	s1.m_b = 100; 类外不可访问 Son1中的保护权限m_b
}


//保护继承
class Son2 : protected Base1{
public:
	void func(){
		m_a = 100;  //变为保护权限
		m_b = 100;  //变为保护权限
//		m_c = 100;    父类私有，无法访问
	}
};

void test02(){
	Son2 s1;
	s1.func();
//	s1.m_a = 1000;  在Son2中，m_a变为保护权限，类外不可访问
//	s1.m_b = 1000;  在Son2中，m_b也变为保护权限，类外不可访问
}


//私有继承
class Son3 : private Base1{
public:
	void func(){
		m_a = 100;  //变为私有
		m_b = 100;	//变为私有
//		m_c = 100;  父类中私有成员，子类访问不到
	}
};

void test03(){
	Son3 s1;
	s1.func();
//	s1.m_a = 1000;  在Son3中为私有成员，访问不了
}


class GrandSon : public Son3{
public:
	void func(){
//		m_a = 1000;   Son3中的m_a变为私有，孙子访问不了
	}
};

void test04(){
	GrandSon son1;
	son1.func();
}


int main(){
	test01();
	test02();
	test03();
	return 0;
}
