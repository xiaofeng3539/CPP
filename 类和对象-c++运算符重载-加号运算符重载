#include<iostream>
using namespace std;

class Person{
public:
	
//	1 . 成员函数重载+号
//	Person operator+(Person &p){
//		Person temp;
//		temp.m_a = this->m_a + p.m_a;
//		temp.m_b = this->m_b + p.m_b;
//		return temp;
//	}
//  成员函数重载的本质调用
//  Person p3 = p1.operator+(p2);
	int m_a;
	int m_b;
};

//   2. 全局函数重载+号
//   全局函数重载的本质调用
//    Person p3 = operator(p1,p2);
Person operator+(Person &p1,Person &p2){
	Person temp;
	temp.m_a = p1.m_a + p2.m_a;
	temp.m_b = p1.m_b + p2.m_b;
	return temp;
}

//  3.  函数重载的版本
Person operator+(Person &p1,int num){
	Person temp;
	temp.m_a = p1.m_a + num;
	temp.m_b = p1.m_b + num;
	return temp;
}

void test01(){
	Person p1;
	p1.m_a = 10;
	p1.m_b = 10;
	Person p2;
	p2.m_a = 10;
	p2.m_b = 10;
	Person p3 = p1 + p2;
	cout << "p3.m_a=" << p3.m_a << " p3.m_b=" << p3.m_b << endl;
	Person p4 = p1+20;
	cout << "p4.m_a=" << p4.m_a << " p4.m_b=" << p4.m_b << endl;
}

int main(){
	test01();
	return 0; 
}

//内置数据类型不能发生重载
//不要滥用函数重载
